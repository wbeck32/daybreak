angular.module("dayBreak").controller("userController",["userService","$scope",function(s,e){this.username=s.username,this.userState=s.userState,this.userRegister=s.userRegister,this.password=null,this.email=null,this.passwordConfirm=null,this.showPasswordChange=!1,this.showDeleteAccount=!1,this.userViewSwitch=null,this.duplicateusername=!0,this.duplicatemail=!0;var i=function(){this.username=s.username,this.userState=s.userState,this.password=null,this.email=null,this.passwordConfirm=null,this.newPassword=null,this.userViewSwitch=null}.bind(this);this.login=function(){console.log("logging in as ..."+this.username),console.log("this.password: "+this.password),s.login(this.username,this.password,i)},this.signOut=function(){console.log("calling signout..."),this.userViewSwitch=null,s.signOut(),i()},this.checkUsername=function(){console.log("CONTROLLER: checking for unique user name..."),s.checkUsername(this.username)},this.checkEmail=function(){console.log("CONTROLLER: checking for unique email..."),s.checkEmail(this.email)}}]);
//# sourceMappingURL=data:application/json;base64,